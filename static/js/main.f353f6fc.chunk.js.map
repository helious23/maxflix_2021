{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","collectionApi","Container","styled","div","Title","span","Grid","Section","title","children","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","propTyles","PropTypes","array","bool","isRequired","string","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","func","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","dividerDisplay","Overview","p","IMDB","display","VideosContainer","Videos","ProductionContainer","Company","Collection","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","production_countries","country","iso_3166_1","imdb_id","href","overview","videos","key","belongs_to_collection","production_companies","item","logo_path","object","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","CollectionContainer","CollectionPoster","CollectionData","CollectionTitle","CollectionPresenter","console","log","parts","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f353f6fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.c0222737.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"83e4562556a8e370915aa2a360e7d4db\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n\nexport const collectionApi = {\n  getDetail: (id) => api.get(`collection/${id}`),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst Grid = styled.div`\n  margin-top: 1.5rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Section;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 5rem;\n  margin-top: 1.2rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #e50914;\n  letter-spacing: -5px;\n`;\n\nexport default () => (\n  <Container>\n    <span>maxflex</span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-size: 2rem;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 0.6rem;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 17)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Maxflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTyles = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Maxflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated TV Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTyles = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n  async componentDidMount() {\n    const {\n      data: { results: topRated },\n    } = await tvApi.topRated();\n    const {\n      data: { results: popular },\n    } = await tvApi.popular();\n    const {\n      data: { results: airingToday },\n    } = await tvApi.airingToday();\n    try {\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 2rem;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n  error,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Maxflix</title>\n    </Helmet>\n    {\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows...\"\n            value={searchTerm}\n            onChange={updateTerm}\n          />\n        </Form>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    imageUrl={movie.poster_path}\n                    rating={movie.vote_average}\n                    year={\n                      movie.release_date && movie.release_date.substring(0, 4)\n                    }\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Show Results\">\n                {tvResults.map((show) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    title={show.original_name}\n                    imageUrl={show.poster_path}\n                    rating={show.vote_average}\n                    year={\n                      show.first_air_date && show.first_air_date.substring(0, 4)\n                    }\n                  />\n                ))}\n              </Section>\n            )}\n          </>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </Container>\n    }\n  </>\n);\n\nSearchPresenter.propTyles = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    loading: false,\n    error: null,\n    searchTerm: \"\",\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: -1;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 2rem;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n  display: ${(props) => props.dividerDisplay};\n`;\n\nconst Overview = styled.p`\n  font-size: 1rem;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst IMDB = styled.a`\n  background-color: #f4c518;\n  color: black;\n  border-radius: 2px;\n  padding: 2px;\n  font-weight: bold;\n  display: ${(props) => props.display};\n`;\nconst VideosContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n`;\n\nconst Videos = styled.a`\n  line-height: 1.5;\n  font-size: 1rem;\n  opacity: 0.7;\n`;\n\nconst ProductionContainer = styled.div`\n  margin-top: 10px;\n  display: grid;\n  grid-template-columns: repeat(5, 100px);\n  grid-template-rows: repeat(3, 100px);\n`;\n\nconst Company = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: 80%;\n  background-repeat: no-repeat;\n  border-radius: 5px;\n`;\n\nconst Collection = styled.div`\n  font-size: 1rem;\n  opacity: 0.7;\n  line-height: 1.5;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Maxflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Maxflix\n        </title>\n      </Helmet>\n      <Backdrop\n        key={result.id}\n        bgImage={\n          result.backdrop_path !== null\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n            : result.poster_path\n            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n            : require(\"../../assets/noPosterSmall.png\").default\n        }\n      />\n      <Content>\n        <Cover\n          key={result.poster_path}\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider\n              key={result.runtime || result.episode_run_time}\n              dividerDisplay={\n                result.runtime || result.episode_run_time ? \"inline\" : \"none\"\n              }\n            >\n              ·\n            </Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider\n              key={result.genres}\n              dividerDisplay={result.genres ? \"inline\" : \"none\"}\n            >\n              ·\n            </Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider\n              key={result.production_countries}\n              dividerDisplay={result.production_countries ? \"inline\" : \"none\"}\n            >\n              ·\n            </Divider>\n            <Item>\n              {result.production_countries &&\n                result.production_countries.map((country, index) =>\n                  index === result.production_countries.length - 1\n                    ? country.iso_3166_1\n                    : `${country.iso_3166_1} / `\n                )}\n            </Item>\n            <Divider\n              key={result.imdb_id}\n              dividerDisplay={result.imdb_id ? \"inline\" : \"none\"}\n            >\n              ·\n            </Divider>\n            <Item>\n              <IMDB\n                key={`key_${result.imdb_id}`}\n                href={`https://www.imdb.com/title/${result.imdb_id}`}\n                target=\"_blank\"\n                display={result.imdb_id ? \"inline\" : \"none\"}\n              >\n                IMDb\n              </IMDB>\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <VideosContainer>\n            {result.videos.results &&\n              result.videos.results.map((title, index) => (\n                <Videos\n                  key={index}\n                  target=\"_blank\"\n                  href={`https://www.youtube.com/watch?v=${result.videos.results[index].key}`}\n                >\n                  🎬 {title.name}\n                </Videos>\n              ))}\n          </VideosContainer>\n          {result.belongs_to_collection && (\n            <Link to={`/collection/${result.belongs_to_collection.id}`}>\n              <Collection> 🎞 {result.belongs_to_collection.name}</Collection>\n            </Link>\n          )}\n          <ProductionContainer>\n            {result.production_companies &&\n              result.production_companies.map((item) => (\n                <Company\n                  key={item.logo_path}\n                  bgImage={\n                    item.logo_path\n                      ? `https://image.tmdb.org/t/p/w200${item.logo_path}`\n                      : require(\"../../assets/noPosterSmall.png\").default\n                  }\n                ></Company>\n              ))}\n          </ProductionContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTyles = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const { isMovie } = this.state;\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const parsedId = parseInt(id, 10);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, loading, error } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.3s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Message from \"Components/Message\";\nimport Loader from \"Components/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: -1;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Title = styled.h3`\n  font-size: 2rem;\n  margin: 10px 0;\n`;\n\nconst Overview = styled.p`\n  font-size: 1rem;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\nconst Data = styled.div`\n  width: 80%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst CollectionContainer = styled.div``;\n\nconst CollectionPoster = styled.div`\n  margin-bottom: 10px;\n  height: 500px;\n  width: 300px;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst CollectionData = styled.div`\n  display: flex;\n  width: 90%;\n  height: 100%;\n  justify-content: space-between;\n  margin-top: 10px;\n`;\n\nconst CollectionTitle = styled.div`\n  font-size: 0.8rem;\n  line-height: 2;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst CollectionPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Maxflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      {console.log({ result })}\n      <Helmet>\n        <title>{result.name} | Maxflix</title>\n      </Helmet>\n      <Backdrop\n        key={result.id}\n        bgImage={\n          result.backdrop_path !== null\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n            : result.poster_path\n            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n            : require(\"../../assets/noPosterSmall.png\").default\n        }\n      />\n      <Content>\n        <Title>{result.name}</Title>\n        <Overview>{result.overview}</Overview>\n        <Data>\n          <CollectionData>\n            {result.parts.map((item) => (\n              <CollectionContainer>\n                <CollectionTitle>{item.original_title}</CollectionTitle>\n                <CollectionPoster\n                  bgImage={\n                    item.poster_path\n                      ? `https://image.tmdb.org/t/p/original${item.poster_path}`\n                      : require(\"../../assets/noPosterSmall.png\").default\n                  }\n                ></CollectionPoster>\n              </CollectionContainer>\n            ))}\n          </CollectionData>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nCollectionPresenter.propTyles = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default CollectionPresenter;\n","import CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport { collectionApi } from \"api\";\nimport React from \"react\";\nimport CollectionPresenter from \"./CollectionPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    result: null,\n    error: null,\n    loading: true,\n  };\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const parsedId = parseInt(id, 10);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      ({ data: result } = await collectionApi.getDetail(parsedId));\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  render() {\n    const { result, loading, error } = this.state;\n    return (\n      <CollectionPresenter result={result} error={error} loading={loading} />\n    );\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\nimport Collection from \"Routes/Collection\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/collection/:id\" component={Collection} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}